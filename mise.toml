# .mise.toml
#
# Defines tasks for the Deno project template.
# Run `mise ls` to see all available tasks.
# Remember to run `mise trust` to enable these tasks.

[tasks]

# --- Development Tasks ---

[tasks.run]
description = "Run the application"
run = "deno run main.ts {{...}}"

[tasks.dev]
description = "Run the application in development mode with file watching"
run = "deno run --watch main.ts {{...}}"

[tasks.test]
description = "Run tests"
run = "deno test"

[tasks."test:watch"]
description = "Run tests in watch mode"
run = "deno test --watch"

[tasks.fmt]
description = "Format code"
run = "deno fmt"

[tasks.lint]
description = "Lint code"
run = "deno lint"

# --- Compilation Tasks ---

[tasks.build]
description = "Compile the script into a native executable for the current OS"
run = "deno compile --allow-net --allow-read --allow-write --allow-env --output deno-app main.ts"

[tasks.build-all]
description = "Compile the script for all major platforms"
run = [
  "mise run build:windows",
  "mise run build:macos-arm",
  "mise run build:macos-intel",
  "mise run build:linux",
]
depends = ["build:windows", "build:macos-arm", "build:macos-intel", "build:linux"]

# --- Platform-Specific Compilation Tasks ---

[tasks."build:windows"]
description = "Compile for Windows (x64)"
run = "deno compile --allow-net --allow-read --allow-write --allow-env --output deno-app.exe --target x86_64-pc-windows-msvc main.ts"

[tasks."build:macos-arm"]
description = "Compile for macOS (Apple Silicon)"
run = "deno compile --allow-net --allow-read --allow-write --allow-env --output deno-app --target aarch64-apple-darwin main.ts"

[tasks."build:macos-intel"]
description = "Compile for macOS (Intel)"
run = "deno compile --allow-net --allow-read --allow-write --allow-env --output deno-app --target x86_64-apple-darwin main.ts"

[tasks."build:linux"]
description = "Compile for Linux (x64)"
run = "deno compile --allow-net --allow-read --allow-write --allow-env --output deno-app --target x86_64-unknown-linux-gnu main.ts"
